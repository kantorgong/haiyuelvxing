<?php
/**
 * @File: UserController.php
 * @User: zhujw <zhjw@xxcb.cn>
 * @Date: 2017/1/12 14:01
 * @Desc: 用户控制器
 */
namespace api\modules\lovev1\controllers;

use components\helper\Curl;
use Yii;
use common\models\xxcb\LoveUser;

class UserController extends BaseController
{
    public $modelClass = 'common\models\xxcb\LoveUser';

    /**
     * @Desc: 配对成功展示页面
     * @User: zhujw <zhjw@xxcb.cn>
     * @param $id
     */
    public function actionView($id)
    {
        if ($id != $this->userInfo['uid'])
        {
            return $this->show('', '页面已过期', -1);
        }

        $user = LoveUser::find()
                ->where(['uid' => $id])
                ->select(['sex', 'hobby', 'mark', 'constellation', 'mate_uid'])
                ->asArray()
                ->one();

        if (!$user)
        {
            return $this->show('', '用户不存在', -1);
        }

        if (!$user['mate_uid'])
        {
            return $this->show('', '没有配对成功', -1);
        }

        $mate = LoveUser::find()
                ->where(['uid' => $user['mate_uid']])
                ->select(['sex', 'hobby', 'mark', 'constellation', 'mate_uid'])
                ->asArray()
                ->one();

        if (!$mate)
        {
            return $this->show('', '配对用户不存在', -1);
        }

        return $this->show([
            'user' => $user,
            'mate' => $mate
        ]);
    }

    /**
     * @Desc: 用户进入页面之后初始化
     * @User: zhujw <zhjw@xxcb.cn>
     * @return array
     */
    public function actionCreate()
    {
        $post = Yii::$app->request->getBodyParams();

        if (!$post['code'])
        {
            return $this->show('', 'code 凭据不能为空', -1);
        }

        $curl = new Curl();
        $curl->get('https://api.weixin.qq.com/sns/jscode2session', [
                'appid' => Yii::$app->params['wxApp']['wyrl']['appid'],
                'secret' => Yii::$app->params['wxApp']['wyrl']['secret'],
                'js_code' => trim($post['code']),
                'grant_type' => 'authorization_code',
        ]);
        $result = json_decode($curl->response, true);
        if($result['errcode'] > 0)
        {
            return $this->show('', $curl->response, -1);
        }

        //存入memcache
        $key = md5($curl->response);
        $result['seesion_key'] = $key;

        //注册用户
        $model = new LoveUser;
        $open_id = $result['openid'];

        //找到最新的记录
        $user = $model->find()
                ->where(['open_id' => $open_id])
                ->orderBy(['uid' => SORT_DESC])
                ->one();

        if ($user)
        {
            $result['uid'] = $user->uid;
            Yii::$app->memcached->set($key, $result, 86400);

            $taskDay = $this->_taskDay($user->start_time, $user->mate_uid, $user->leave);
            if ($taskDay > 7)
            {
                $taskDay = -2;
            }
            //判断对方是否已离开
            if ($taskDay > 0)
            {
                $mate = LoveUser::find()->where(['uid' => $user->mate_uid])->asArray()->select(['leave'])->one();
                if ($mate['leave']) $taskDay = -4;
            }
            $day = Yii::$app->memcached->get('love_user:day');
            if ($taskDay > 0 && $day > 0)
            {
                $taskDay = $day;
            }
            return $this->show([
                    'seesion_key' => $key,
                    'uid' => $user->uid,
                    'day' => $taskDay,                                   //第几天，-1：未开启，-2：已结束，-3：主动离开，-4：对方离开
                    'active_time' => $user->active_time,                 //激活时间：恋爱吧
                    'start_time' => $user->start_time,                   //任务开启时间
                    'mate_uid' => $user->mate_uid,                       //配对的用户ID，为0表示未配对
                    'complete' => $user->nickname ? 1 : 0                //是否完善资料
            ]);
        }

        $start_time = Yii::$app->memcached->get('love_user:start_time')?:0;
        $data = ['open_id' => $open_id, 'start_time' => $start_time];
        if ($model->load($data, '') && $model->save())
        {
            $result['uid'] = $model->attributes['uid'];
            Yii::$app->memcached->set($key, $result, 86400);

            return $this->show([
                    'seesion_key' => $key,
                    'uid' => $model->attributes['uid'],
                    'day' => -1,                                         //第几天，-1：未开启，-2：已结束，-3：主动离开
                    'active_time' => 0,                                  //激活时间：恋爱吧
                    'start_time' => $start_time,                         //任务开启时间
                    'mate_uid' => 0,                                     //配对的用户ID，为0表示未配对
                    'complete' => 0
            ]);
        }

        return $this->show('', '用户初始化失败', -1);
    }

    /**
     * @Desc: 填写基本资料
     * @User: zhujw <zhjw@xxcb.cn>
     * @param $id
     * @return array
     * @throws \yii\base\InvalidConfigException
     */
    public function actionUpdate($id)
    {
        $post = Yii::$app->request->getBodyParams();

        if ($id != $this->userInfo['uid'])
        {
            return $this->show('', '页面已过期', -1);
        }

        if ($post['active']) $post['active_time'] = time();

        //是否是重玩
        $model = new LoveUser();
        if (!$post['replay'])
        {
            $model = LoveUser::find()->where(['uid' => $id])->one();
        }
        else
        {
            $post['open_id'] = $this->userInfo['open_id'];
        }

        if ($model->load($post, '') && $model->save())
        {
            if ($post['replay'])
            {
                $this->userInfo['uid'] = $model->attributes['uid'];
                Yii::$app->memcached->set($this->userInfo['seesion_key'], $this->userInfo, 86400);
            }

            return $this->show([
                    'uid' => $model->attributes['uid'],
            ]);
        }
        return $this->show('', '数据填写失败', -1);
    }

    //计算当前是第几天任务
    protected function _taskDay($start_time, $mid, $leave)
    {
        if (!$start_time || !$mid)
        {
            return -1;
        }

        $minus = time() - $start_time;
        if ($minus <= 0)
        {
            return -1;  //未开启
        }

        if ($leave)
        {
            return -3;  //主动离开
        }

        return ceil(($minus)/86400);
    }
}